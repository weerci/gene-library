-----------------------------------------------------
-- Export file for user MODERN                     --
-- Created by Администратор on 24.09.2013, 5:29:39 --
-----------------------------------------------------

spool prk_tab.log

prompt
prompt Creating package PRK_TAB
prompt ========================
prompt
create or replace package modern.prk_tab is

    function set_locus_history(a_id in number, history_action in number, expert_id in number, note in nvarchar2) return number;
      
  -- Работа со справочниками
    -- Справочник "Коды МВД"
    function mvd_ins(a_name in nvarchar2, a_short_name in nvarchar2, a_code in nvarchar2) return number;
    procedure mvd_upd(a_id in number, a_name in nvarchar2, a_short_name in nvarchar2, a_code in nvarchar2);
    procedure mvd_del(a_id number);

    -- Справочник "Коды райлиноргана"
    function lin_ins(a_code in nvarchar2, a_organ in nvarchar2) return number;
    procedure lin_upd(a_id in number, a_code in nvarchar2, a_organ in nvarchar2);
    procedure lin_del(a_id number);

    -- Справочник "Список экспертных подразделений"
    function division_ins(a_name in nvarchar2, a_address in nvarchar2, a_phone in nvarchar2) return number;
    procedure division_upd(a_id in number, a_name in nvarchar2, a_address in nvarchar2, a_phone in nvarchar2);
    procedure division_del(a_id in number);

    -- Справочник "Список должностей"
    function post_ins(a_name in nvarchar2) return number;
    procedure post_upd(a_id in number, a_name in nvarchar2);
    procedure post_del(a_id in number);

    -- Справочник "Список экспертов"
    function exp_ins(a_div_id in number, a_post_id in number, a_surname in nvarchar2,
      a_name in nvarchar2, a_patronic in nvarchar2, a_login in nvarchar2, a_sign in nvarchar2) return number;
    procedure exp_upd(a_id in number, a_div_id in number, a_post_id in number, a_surname in nvarchar2,
      a_name in nvarchar2, a_patronic in nvarchar2, a_login in nvarchar2, a_sign in nvarchar2);
    procedure exp_del(a_id in number,  a_curr_user in number);
    procedure exp_change_password(a_id in number, a_password in nvarchar2);
    function exp_check_password(a_id in number, a_password in nvarchar2) return number;

    -- Справочник "Список методов расчета"
    function method_ins(a_name in nvarchar2, a_def_freq in number, a_desc in nvarchar2) return number;
    procedure freq_ins(a_allele_id in number, a_method_id in number, a_freq in number);
    procedure method_upd(a_id in number, a_name in nvarchar2, a_def_freq in number, a_desc in nvarchar2);
    procedure freq_upd(a_method_id in number, a_allele_id in number, a_freq in number);
    procedure method_del(a_id in number);
    procedure freq_del(a_method_id in number, a_allele_id in number);
    procedure methods_freq_del(a_id in number);

    -- Справочник "Список локусов"
    function locus_ins(a_name in nvarchar2, curr_user in number) return number;
    procedure locus_upd(a_id in number, a_name in nvarchar2, curr_user in number);
    procedure locus_del(a_id in number);
    function allele_ins(a_name in nvarchar2, a_short_name in nvarchar2) return number;
    procedure allele_upd(a_id in number, a_name in nvarchar2, a_short_name in nvarchar2);
    procedure allele_del(a_id in number);

    -- Справочник "Статьи УК"
    function uk_artcl_ins(a_artcl in nvarchar2, a_note in nvarchar2, a_parent_id in number) return number;
    function uk_text_ins(a_note in nvarchar2, a_parent_id in number) return number;
    procedure uk_artcl_upd(a_id in number, a_artcl in nvarchar2, a_note in nvarchar2, a_parent_id in number);
    procedure uk_text_upd(a_id in number, a_note in nvarchar2, a_parent_id in number);
    procedure uk_item_del(a_id in number);

    -- Справочник "Роли пользователя"
    function role_ins(a_name in nvarchar2) return number;
    procedure role_upd(a_id in number, a_name in nvarchar2);
    procedure role_del(a_id in number);

    -- Справочник "Организации"
    function org_ins(a_note in nvarchar2) return number;
    procedure org_upd(a_id in number, a_note in nvarchar2);
    procedure org_del(a_id in number);

    -- Справочник "Вид объекта"
    function sort_ins(a_name in nvarchar2, a_short_name in nvarchar2) return number;
    procedure sort_upd(a_id in number, a_name in nvarchar2, a_short_name in nvarchar2);
    procedure sort_del(a_id in number);

    -- Справочник "Категории объекта"
    function class_obj_ins(a_name in nvarchar2, a_short_name in nvarchar2) return number;
    procedure class_obj_upd(a_id in number, a_name in nvarchar2, a_short_name in nvarchar2);
    procedure class_obj_del(a_id in number);

    -- Справочник "Категории карточки ИКЛ"
    function class_ikl_ins(a_name in nvarchar2, a_short_name in nvarchar2) return number;
    procedure class_ikl_upd(a_id in number, a_name in nvarchar2, a_short_name in nvarchar2);
    procedure class_ikl_del(a_id in number);

    -- Назначение прав ролям
    procedure role_right_del(a_role_id in number);
    procedure role_right_ins(a_role_id in number, a_func_id in number);

    -- Назначение прав пользователям
    procedure right_user_del(a_user_id in number);
    procedure right_user_ins(a_user_id in number, a_func_id in number, a_permission in number);
    procedure role_user_ins(a_user_id in number, a_role_id in number);

    -- Работа с фильтрами
    function filter_ins(a_name in nvarchar2, a_text in nclob) return number;
    procedure filter_upd(a_id in number, a_name in nvarchar2, a_text in nvarchar2);
    procedure filter_del(a_id in number);

end ;
/

prompt
prompt Creating package body PRK_TAB
prompt =============================
prompt
create or replace package body modern.prk_tab is
  -- Работа с историей
  function set_locus_history(a_id in number, history_action in number, expert_id in number, note in nvarchar2) return number is
      hist_id number;
      new_hist_id number;
  begin
    select nvl(max(id), 1) into hist_id  from modern.history where obj_id = a_id and his_type_id = 2;

    select modern.history_seq.nextval into new_hist_id from dual;
    if (hist_id > 0) then
      insert into modern.history(id, expert_id, action_id, DATE_INSERT, note, parent_id, obj_id, his_type_id)
      values (new_hist_id, expert_id, history_action, sysdate, note, hist_id, a_id, 2);
      update modern.card c set c.history_id = new_hist_id where c.id = a_id;
    else
      insert into modern.history(id, expert_id, action_id, DATE_INSERT, note, obj_id, his_type_id)
      values (new_hist_id, expert_id, history_action, sysdate, note, a_id, 2);
    end if;

    return new_hist_id;
  end;
  
  -- Работа со справочниками
    -- Справочник "Коды МВД"
    function mvd_ins(a_name in nvarchar2, a_short_name in nvarchar2, a_code in nvarchar2) return number is
      cnt number default 0;
    begin
      select modern.code_mvd_seq.nextval into cnt from dual;
      insert into modern.code_mvd(id, name, short_name, code) values (cnt, a_name, a_short_name, a_code);
      return cnt;
    end;
    procedure mvd_upd(a_id in number, a_name in nvarchar2, a_short_name in nvarchar2, a_code in nvarchar2) is
    begin
      update modern.code_mvd cm set
        cm.name = a_name,
        cm.short_name = a_short_name,
        cm.code = a_code
      where
        cm.id = a_id;
    end;
    procedure mvd_del(a_id number) is
    begin
      delete from modern.code_mvd where id = a_id;
    end;

    -- Справочник "Коды райлиноргана"
    function lin_ins(a_code in nvarchar2, a_organ in nvarchar2) return number is
      cnt number default 0;
    begin
      select modern.code_lin_seq.nextval into cnt from dual;
      insert into modern.code_lin(id, code, organ) values (cnt, a_code, a_organ);
      return cnt;
    end;
    procedure lin_upd(a_id in number, a_code in nvarchar2, a_organ in nvarchar2) is
    begin
      update modern.code_lin cl set
        cl.code = a_code,
        cl.organ = a_organ
       where
        cl.id = a_id;
    end;
    procedure lin_del(a_id number) is
    begin
      delete from modern.code_lin where id = a_id;
    end;

    -- Справочник "Список экспертных подразделений"
    function division_ins(a_name in nvarchar2, a_address in nvarchar2, a_phone in nvarchar2) return number is
      cnt number default 0;
    begin
      select modern.division_seq.nextval into cnt from dual;
      insert into modern.division(id, name, address, phone) values (cnt, a_name, a_address, a_phone);
      return cnt;
    end;
    procedure division_upd(a_id in number, a_name in nvarchar2, a_address in nvarchar2, a_phone in nvarchar2) is
    begin
      update modern.division d set
        d.name = a_name,
        d.address = a_address,
        d.phone = a_phone
      where
        d.id = a_id;
    end;
    procedure division_del(a_id in number) is
    begin
      delete from modern.division where id = a_id;
    end;

      -- Список должностей
    function post_ins(a_name in nvarchar2) return number is
      cnt number default 0;
    begin
      select modern.post_seq.nextval into cnt from dual;
      insert into modern.post(id, name) values (cnt, a_name);
      return cnt;
    end;
    procedure post_upd(a_id in number, a_name in nvarchar2) is
    begin
      update modern.post p set
        p.name = a_name
      where
        id = a_id;
    end;
    procedure post_del(a_id in number) is
    begin
      delete from modern.post where id = a_id;
    end;

    -- Список экспертов
    function exp_ins(a_div_id in number, a_post_id in number, a_surname in nvarchar2,
      a_name in nvarchar2, a_patronic in nvarchar2, a_login in nvarchar2, a_sign in nvarchar2) return number is
      cnt number default 0;
      salt nvarchar2(4);
    begin
      select modern.expert_seq.nextval into cnt from dual;
      salt := dbms_random.string('a', 4);
      insert into modern.expert(id, division_id, post_id, surname, name, patronic, login, sign, salt)
        values (cnt, a_div_id, a_post_id, a_surname, a_name, a_patronic, a_login, a_sign, salt);
      return cnt;
    end;
    procedure exp_upd(a_id in number, a_div_id in number, a_post_id in number, a_surname in nvarchar2,
      a_name in nvarchar2, a_patronic in nvarchar2, a_login in nvarchar2, a_sign in nvarchar2) is
    begin
      update modern.expert e set
        e.division_id = a_div_id,
        e.post_id = a_post_id,
        e.surname = a_surname,
        e.name = a_name,
        e.patronic = a_patronic,
        e.login = a_login,
        e.sign = a_sign
      where
        e.id = a_id;
    end;
    procedure exp_del(a_id in number, a_curr_user in number) is
      p_expert nvarchar2(256);
      hist_id number;
    begin
      select 'id='||a_id||';name='||surname||' '||name||' '||patronic||';division='||division||';post='||post||';login='||login||';sign='||sign
        into p_expert from modern.v_expert ve
        where ve.id = a_id;

      delete from modern.action_expet ae where ae.expert_id = a_id;
      delete from modern.roles_expert re where re.expert_id = a_id;
      delete from modern.expert where id = a_id;
    end;

    procedure exp_change_password(a_id in number, a_password in nvarchar2) is
    begin
      update modern.expert e
      set e.password = modern.PKG_SCR.getHash(a_password||salt)
      where e.id = a_id;
    end;

    function exp_check_password(a_id in number, a_password in nvarchar2) return number is
      p_password nvarchar2(512);
      p_salt nvarchar2(4);
    begin
      select password, salt into p_password, p_salt from modern.expert where id = a_id;
      if (modern.PKG_SCR.getHash(a_password||p_salt) = p_password) then
        return 1;
      else
        return 0;
      end if;
    end;

    -- Справочник "Список методов расчета"
    function method_ins(a_name in nvarchar2, a_def_freq in number, a_desc in nvarchar2) return number is
      cnt number default 0;
    begin
      select modern.method_seq.nextval into cnt from dual;
      insert into modern.method(id, name, description, def_freq) values (cnt, a_name, a_desc, a_def_freq);
      return cnt;
    end;

    procedure freq_ins(a_allele_id in number, a_method_id in number, a_freq in number) is
    begin
      insert into modern.allele_freq(allele_id, method_id, freq) values (a_allele_id, a_method_id, a_freq);
    end;

    procedure method_upd(a_id in number, a_name in nvarchar2, a_def_freq in number, a_desc in nvarchar2) is
    begin
      update modern.method m set
        m.name = a_name,
        m.description = a_desc,
        m.def_freq = a_def_freq
      where
        m.id = a_id;
    end;

    procedure freq_upd(a_method_id in number, a_allele_id in number, a_freq in number) is
    begin
      update modern.allele_freq af set
        af.freq = a_freq
      where
        af.allele_id = a_allele_id and af.method_id = a_method_id;
    end;

    procedure method_del(a_id in number) is
    begin
      methods_freq_del(a_id);
      delete from modern.method where id = a_id;
    end;

    procedure methods_freq_del(a_id in number) is
    begin
      for rec in (
        select af.allele_id, af.method_id from modern.allele_freq af
          where af.method_id = a_id
      ) loop
        freq_del(rec.method_id, rec.allele_id);
      end loop;
    end;

    procedure freq_del(a_method_id in number, a_allele_id in number) is
    begin
      delete from modern.allele_freq af
        where
          af.allele_id = a_allele_id and af.method_id = a_method_id;
    end;

    -- Справочник "Список локусов"
    function locus_ins(a_name in nvarchar2, curr_user in number) return number is
      locus_id number default 0;
      hist_id number;
    begin
      select modern.locus_seq.nextval into locus_id from dual;
      -- Заводим историю локуса
      hist_id := set_locus_history(locus_id, 13, curr_user, 'Создание локуса ID="'||locus_id||'" Наименование="'||a_name||'"');
      insert into modern.locus(id, name, history_id) values (locus_id, a_name, hist_id);
      return locus_id;
    end;
    
    procedure locus_upd(a_id in number, a_name in nvarchar2, curr_user in number) is
      locus_name modern.locus.name%type;
      hist_id number;
    begin
      select l.name into locus_name from modern.locus l where l.id = a_id;

      hist_id := set_locus_history(a_id, 14, curr_user, 
      ' Изменение локуса ID="'||a_id||'" Наименование="'||locus_name||'"'||' Новые данные: Наименование= "'||a_name||'"');

    update modern.locus l
      set
        l.name = a_name, l.history_id = hist_id
      where
        l.id = a_id;
    end;
    
    procedure locus_del(a_id in number) is
    begin
      return;              
		end;
    function allele_ins(a_name in nvarchar2, a_short_name in nvarchar2) return number is
    begin
      return -1;
    end;
    procedure allele_upd(a_id in number, a_name in nvarchar2, a_short_name in nvarchar2) is
    begin
      return;
    end;
    procedure allele_del(a_id in number) is
    begin
      return;
    end;

    -- Справочник "Статьи УК"
    function uk_artcl_ins(a_artcl in nvarchar2, a_note in nvarchar2, a_parent_id in number) return number is
      cnt number;
    begin
      select  modern.ukitem_seq.nextval into cnt from dual;
      insert into modern.ukitem(id, parent_id) values (cnt, a_parent_id);
      insert into modern.ukarticl(id, artcl, note) values (cnt, a_artcl, a_note);
      return cnt;
    end;

    function uk_text_ins(a_note in nvarchar2, a_parent_id in number) return number is
      cnt number;
    begin
      select  modern.ukitem_seq.nextval into cnt from dual;
      insert into modern.ukitem(id, parent_id) values (cnt, a_parent_id);
      insert into modern.uktext(id, note) values (cnt, a_note);
      return cnt;
    end;

    procedure uk_artcl_upd(a_id in number, a_artcl in nvarchar2, a_note in nvarchar2, a_parent_id in number) is
    begin
      update modern.ukarticl u set
        u.artcl = a_artcl,
        u.note = a_note
      where
        u.id = a_id;

      update modern.ukitem i set
        i.parent_id = a_parent_id
      where
        i.id = a_id;
    end;

    procedure uk_text_upd(a_id in number, a_note in nvarchar2, a_parent_id in number) is
    begin
      update modern.uktext t set
        t.note = a_note
      where
        t.id = a_id;

      update modern.ukitem i set
        i.parent_id = a_parent_id
      where
        i.id = a_id;
    end;

    procedure uk_item_del(a_id in number) is
    begin
      -- определено каскадное удаление
      delete from modern.ukitem where id = a_id;
    end;

    -- Справочник "Организации"
    function org_ins(a_note in nvarchar2) return number is
      cnt number;
    begin
      select modern.organization_seq.nextval into cnt from dual;
      insert into modern.organization(id, note) values (cnt, a_note);
      return cnt;
    end;
    procedure org_upd(a_id in number, a_note in nvarchar2) is
    begin
      update modern.organization
      set note = a_note
      where id = a_id;
    end;
    procedure org_del(a_id in number) is
    begin
      delete from modern.organization where id = a_id;
    end;

    -- Справочник "Вид объекта"
    function sort_ins(a_name in nvarchar2, a_short_name in nvarchar2) return number is
      cnt number;
    begin
      select modern.sort_object_seq.nextval into cnt from dual;
      insert into modern.sort_object(id, name, short_name) values
        (cnt, a_name, a_short_name);
      return cnt;
    end;
    procedure sort_upd(a_id in number, a_name in nvarchar2, a_short_name in nvarchar2) is
    begin
      update modern.sort_object so
      set so.name = a_name,
        so.short_name = a_short_name
      where so.id = a_id;
    end;
    procedure sort_del(a_id in number) is
    begin
      delete from modern.sort_object where id = a_id;
    end;

    -- Справочник "Категории объекта"
    function class_obj_ins(a_name in nvarchar2, a_short_name in nvarchar2) return number is
      cnt number;
    begin
      select modern.class_object_seq.nextval into cnt from dual;
      insert into modern.class_object(id, name, short_name) values (cnt, a_name, a_short_name);
      return cnt;
    end;
    procedure class_obj_upd(a_id in number, a_name in nvarchar2, a_short_name in nvarchar2) is
    begin
      update modern.class_object co
      set co.name = a_name, co.short_name = a_short_name
      where co.id = a_id;
    end;
    procedure class_obj_del(a_id in number) is
    begin
      delete from modern.class_object where id = a_id;
    end;

    -- Справочник "Категории карточки ИКЛ"
    function class_ikl_ins(a_name in nvarchar2, a_short_name in nvarchar2) return number is
      cnt number;
    begin
      select modern.class_object_seq.nextval into cnt from dual;
      insert into modern.class_ikl(id, name, short_name) values (cnt, a_name, a_short_name);
      return cnt;
    end;
    procedure class_ikl_upd(a_id in number, a_name in nvarchar2, a_short_name in nvarchar2) is
    begin
      update modern.class_ikl cl
      set cl.name = a_name, cl.short_name = a_short_name
      where cl.id = a_id;
    end;
    procedure class_ikl_del(a_id in number) is
    begin
      delete from modern.class_ikl where id = a_id;
    end;

    -- Список ролей
    function role_ins(a_name in nvarchar2) return number is
      cnt number default 0;
    begin
      select modern.roles_seq.nextval into cnt from dual;
      insert into modern.roles(id, name) values (cnt, a_name);
      return cnt;
    end;
    procedure role_upd(a_id in number, a_name in nvarchar2) is
    begin
      update modern.roles p set
        p.name = a_name
      where
        id = a_id;
    end;
    procedure role_del(a_id in number) is
    begin
      delete from modern.roles_expert re where re.role_id = a_id;
      delete from modern.action_roles ar where ar.role_id = a_id;
      delete from modern.roles where id = a_id;
    end;

    -- Назначение прав ролям
    procedure role_right_del(a_role_id in number) is
    begin
      delete from modern.action_roles where role_id = a_role_id;
      null;
    end;

    procedure role_right_ins(a_role_id in number, a_func_id in number) is
    begin
      insert into modern.action_roles(role_id, func_id) values (a_role_id, a_func_id);
    end;

    -- Назначение прав пользователям
    procedure right_user_del(a_user_id in number) is
    begin
      delete from modern.roles_expert re where re.expert_id = a_user_id;
      delete from modern.action_expet ae where ae.expert_id = a_user_id;
    end;
    procedure right_user_ins(a_user_id in number, a_func_id in number, a_permission in number) is
    begin
      insert into modern.action_expet(func_id, expert_id, permission) values (a_func_id, a_user_id, a_permission);
    end;
    procedure role_user_ins(a_user_id in number, a_role_id in number) is
    begin
      insert into modern.roles_expert (role_id, expert_id) values (a_role_id, a_user_id);
    end;

    -- Работа с фильтрами
    function filter_ins(a_name in nvarchar2, a_text in nclob) return number is
      cnt number;
    begin
      select modern.filters_seq.nextval into cnt from dual;
      insert into modern.filters(id, name, text) values (cnt, a_name, a_text);
      return cnt;
    end;
    procedure filter_upd(a_id in number, a_name in nvarchar2, a_text in nvarchar2) is
    begin
      update modern.filters f
      set f.name = a_name, f.text = a_text
      where f.id = a_id;
    end;
    procedure filter_del(a_id in number) is
    begin
      delete from modern.filters where id = a_id;
    end;

end;
/


spool off
